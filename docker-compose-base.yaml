version: '2'

services:
    orderer.acme.com:
        image: hyperledger/fabric-orderer:$IMAGE_TAG
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        environment: 
            - FABRIC_LOGGING_SPEC=INFO
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENESISPROFILE=SampleInsecureSolo
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            # enabled TLS
            - ORDERER_FILELEDGER_LOCATION=/var/ledger
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED=false
            # - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            # - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            # - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            # - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
            # - ORDERER_KAFKA_VERBOSE=true
            # - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            # - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            # - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    
    peer.base:
        image: hyperledger/fabric-peer:$IMAGE_TAG
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        environment: 
            - FABRIC_LOGGING_SPEC=INFO
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            # the following setting starts chaincode containers on the same
            # bridge network as the peers
            # https://docs.docker.com/compose/networking/
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_airline
            #- FABRIC_LOGGING_SPEC=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_ADDRESSAUTODETECT=true
            # - CORE_PEER_PROFILE_ENABLED=true
            # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
            # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
            # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt

    
    

